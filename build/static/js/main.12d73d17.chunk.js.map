{"version":3,"sources":["Components/Search.js","Components/Artist.js","Components/TrackList.js","App.js","serviceWorker.js","index.js"],"names":["Search","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChangeName","event","setState","artistName","target","value","handleKeyPress","key","searchArtist","state","react_default","a","createElement","className","type","placeholder","onChange","onKeyPress","onClick","Component","Artist","_this$props","artist","isErr","map","item","index","name","followers","total","genres","join","popularity","width","height","src","images","url","TrackList","playAudio","audioURL","audioPlayer","Audio","isPlay","pause","previewURL","play","changeIcon","prevURL","class","_this2","trackList","pageTitle","isSearch","errText","album","release_date","preview_url","href","external_urls","spotify","apiURL","App","fetch","then","response","json","artists","items","artistID","id","tracks","catch","error","console","trackPageTitle","Components_Search","Components_Artist","Components_TrackList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.12d73d17.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass Search extends Component {\n\n    constructor(props){\n        super(props);\n        \n        this.state= {\n            artistName: \"\"\n        }\n    }\n\n    onChangeName = event => {\n        this.setState({\n            artistName : event.target.value\n        });\n    }\n\n    handleKeyPress = event => {\n        if(event.key === 'Enter'){\n          this.searchArtist();\n        }\n      }\n    \n    searchArtist = () => {\n        this.props.searchArtist(this.state.artistName);\n    }\n\n    render() {\n        return (\n            <div className=\"searchForm\">\n                <h4>Şarkıcı adı giriniz</h4>\n                <p>Aşağıdaki form aracılığıyla sevdiğiniz sanatçıları arayabilir, ve şarkılarını dinleyebilirsiniz.</p>\n                <div className=\"input-group\">\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Şarkıcı...\" value={this.state.artistName} onChange={this.onChangeName} onKeyPress={this.handleKeyPress} />\n                    <div className=\"input-group-append\">\n                        <button type=\"submit\" className=\"btn btn-secondary\" onClick={this.searchArtist}>Albümleri Getir</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Search;","import React, { Component } from 'react'\n\nclass Artist extends Component {\n\n    constructor(props){\n        super(props);\n    }\n    render() {\n        const {artist, isErr} = this.props;\n        return (\n            <div className=\"col-6 py-4 m-auto\">\n                {\n                    !isErr ?\n                    artist.map((item, index) => {\n                        return (\n                            <div key={index} className=\"row no-gutters border rounded overflow-hidden flex-md-row mb-4 shadow-sm h-md-250 position-relative\">\n                                <div className=\"col p-4 d-flex flex-column position-static\">\n                                <strong className=\"d-inline-block mb-2 text-primary\"></strong>\n                                <h3 className=\"mb-1\">{item.name}</h3>\n                                <div className=\"mb-1 text-muted\">Toplam Takipçi: {item.followers.total} </div>\n                                <p className=\"card-text mb-auto\">Tarzı: {item.genres.join(\", \")} </p>\n                                <p className=\"card-text mb-auto\">Popülerlik: {item.popularity} </p>\n                                </div>\n                                <div className=\"col-auto d-none d-lg-block\">\n                                <img className=\"bd-placeholder-img\" width=\"200\" height=\"200\" src={item.images[1].url}  />\n                                </div>\n                            </div>\n                        )\n                    })\n                    :\n                    \"\"\n                }\n            </div>\n        )\n    }\n}\n\nexport default Artist;","import React, { Component } from 'react'\n\nclass TrackList extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            isPlay : false,\n            audioPlayer: null,\n            previewURL: \"\",\n        };\n    }\n\n    playAudio = audioURL => () => {\n        const audioPlayer= new Audio(audioURL); \n    \n        if(!this.state.isPlay){\n            audioPlayer.play();\n            this.setState({\n                isPlay: true,\n                audioPlayer: audioPlayer,\n                previewURL: audioURL\n            });\n        }\n        else{\n            this.state.audioPlayer.pause();\n            if(this.state.previewURL == audioURL){\n                this.setState({ isPlay: false });\n            }\n            else{\n                audioPlayer.play();\n                this.setState({ audioPlayer: audioPlayer, previewURL: audioURL });\n            }\n        }\n    }\n\n    changeIcon = prevURL => {\n        if (!prevURL) {\n            return <i class=\"fas fa-times\"></i>\n        }\n        if (this.state.isPlay && this.state.previewURL === prevURL) {\n            return <i className=\"fas fa-pause\"></i>\n        }\n        return <i className=\"fas fa-play\"></i>\n    }\n\n    render() {\n        const {trackList, pageTitle, isSearch, isErr, errText} = this.props;\n        //console.log(isErr)\n        //console.log(trackList)\n        return (\n            <div className=\"trackList py-1 row\">\n                <div className=\"row col-12\">\n                { isSearch ? <h2>{pageTitle}</h2> : \"\"}\n                </div>\n                {\n                    !isErr ? \n                    trackList.map((item, index) => {\n                        return (\n                            <div key={index} className=\"col-4 albumItem\">\n                                <div className=\"albumImage\">\n                                    <img src={item.album.images[1].url}  />\n                                </div>\n                                <div className=\"albumText\">\n                                    <div className=\"albumInfo\">\n                                        <span><b>Albüm Adı:</b> {item.album.name}</span>\n                                        <span><b>Albüm Yılı:</b> {item.album.release_date}</span>\n                                    </div>\n                                    <div className=\"trackInfo\">\n                                        <span><b>Şarkı Adı:</b> {item.name}</span>\n                                        <span><b>Popülerlik:</b> {item.popularity}</span>\n                                        <div className=\"playVideo\">\n                                            <span className=\"btnPlay\" onClick= {this.playAudio(item.preview_url)}> \n                                            {this.changeIcon(item.preview_url)}\n                                            </span>\n                                        </div>\n                                    </div>\n                                    <div className=\"btnTrack\">\n                                        <a href={item.external_urls.spotify} target=\"_blank\">Spotify'da çal</a>\n                                    </div>\n                                </div>\n                            </div>\n                    )\n                    })\n                    : <h2>{errText}</h2>\n                }\n            </div>\n        )\n    }\n}\n\nexport default TrackList;","import React, {Component} from 'react';\nimport './App.css';\nimport Search from './Components/Search';\nimport Artist from './Components/Artist';\nimport TrackList from './Components/TrackList';\n\nconst apiURL = 'https://spotify-api-wrapper.appspot.com';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state={\n      artist: [],\n      artistID: \"\",\n      tracks: [],\n      isSearch : false,\n      isErr: false,\n      errText: \"\",\n      trackPageTitle: \"Şarkı Listesi\"\n    }\n  }\n\n  searchArtist = (artistName) => {\n    const artist = artistName;\n    fetch(apiURL + \"/artist/\" + artist).then((response) => {\n      return response.json();\n    }).then((response) => {\n      this.setState({\n        artist: response.artists.items,\n        artistID: response.artists.items[0].id,\n        isErr: false\n      });\n      //console.log(response.artists.items[0].id)\n      //console.log(apiURL + \"/artist/\" + this.state.artistID + \"/\" + \"top-tracks\")\n      fetch(apiURL + \"/artist/\" + this.state.artistID + \"/\" + \"top-tracks\").then((response) => {\n        return response.json();\n      }).then((response) => {\n        this.setState({\n          tracks: response.tracks,\n          isSearch: true,\n          isErr: false\n        });\n      });\n\n    }).catch((error) => {\n      console.error('Error:', error);\n      this.setState({\n        isErr: true,\n        errText: \"Sonuç bulunamadı.\"\n      });\n    })\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\"> \n        <Search searchArtist={this.searchArtist} />\n        <Artist artist={this.state.artist} isErr= {this.state.isErr} errText= {this.state.errText} />\n        <TrackList trackList={this.state.tracks} pageTitle={this.state.trackPageTitle} isSearch= {this.state.isSearch} isErr= {this.state.isErr} errText= {this.state.errText} />\n      </div>\n    );\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}